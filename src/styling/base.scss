.cc-link{
    text-decoration: underline;
}

.cc-clearfix, %cc-clearfix{
    content: "";
    display: table;
    clear: both;
}

//some generic helper classes

.cc-unstyled{

    body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, legend, input, textarea, p, blockquote, th, td{
        margin: 0;
        padding: 0;
    }

    h1, h2, h3, h4, h5, h6{ font-weight: normal; font-size: 100%; }

    address, caption, cite, code, dfn, em, strong, th, var {
        font-style: normal;
        font-weight: normal;
    }
}


.cc-full-width-height, %cc-full-width-height{
    width: 100%;
    height: 100%;
    position:relative;
}

.cc-expand-only, %cc-expand-only{
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

.cc-dock-left, %cc-dock-left{
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
}

.cc-dock-right, %cc-dock-right{
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
}

.cc-dock-bottom, %cc-dock-bottom{
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
}

.cc-expand{
    @extend %cc-full-width-height;
    @extend %cc-expand-only;
}

.cc-scrollable-vertical, %cc-scrollable-vertical {
    overflow-y: auto;
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch;
}

.cc-supports-position-fixed .cc-scroller--if-fixed,
.cc-supports-position-fixed.cc-scroller--if-fixed{
    @extend %cc-scrollable-vertical
}

//For the fixed toolbar scroller we set overflow-x to hidden to avoid horizontal
//scrollbars on iOS. However, Android 2 also supports the fixed toolbar scroller
//but has poor overflow support which causes the page to not scroll at all if
//overflow-x:hidden is applied. Thankfully Android does not suffer from that
//horizontal toolbars bug so that it does not need the fix, in the first place.
//So here we take back the overflow-x:hidden thing for Android 2.

//On first glance it might seem odd why we don't explicitly set the overflow-x:hidden
//for iOS instead of reverting it for Android 2. However, on a second thought
//it feels sane to set the overflow-x:hidden if we wouldn't suffer from that bug.
//For instance, if a customer injects ugly markup/css into a product page, we
//would rather have the content cut off than suffering from scroll bars.

.cc-supports-position-fixed.cc-os-android.cc-osv-2 .cc-scroller--if-fixed,
.cc-supports-position-fixed.cc-os-android.cc-osv-2.cc-scroller--if-fixed{
    overflow: visible;
}

.cc-container, %cc-container{
    display: -webkit-box;
}

.cc-body{
    @extend %cc-container;
    overflow: hidden;
    -webkit-box-flex: 1;
    min-width: 100%;
    min-height: 100%;
    position: relative;
}

.cc-docking-vertical{
    display: -webkit-box;
    -webkit-box-flex: 1;
    -webkit-box-orient: vertical;
    min-width: 100%;
    min-height: 100%;
}

.cc-grid-cell, %cc-grid-cell{
    position: relative;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-box-align: stretch;
    -webkit-box-flex: 1;
}

.cc-grid-row, %cc-grid-row{
    -webkit-box-flex: 1;
    display: -webkit-box;
    -webkit-box-orient: horizontal;
    -webkit-box-align: stretch;
    width: 100%;
}

.cc-grid, %cc-grid{
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-box-align: stretch;
    height: 100%;
}